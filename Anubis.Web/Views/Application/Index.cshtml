@model Anubis.Web.Models.ApplicationModel
@{
    ViewBag.Title = @Model.Name;
    Layout = "~/Views/Shared/_WideLayout.cshtml";
}
@section BarButton
{
    <a class="btn" href="#appDetails" role="button" data-toggle="modal">App Details</a>
    <button class="btn" onclick="refreshMessageCounts()">Refresh</button>
    <a class="btn btn-primary" href="#addNewApplicationRegion" role="button" data-toggle="modal">Monitor Azure Region
    </a>
}
@*<p>
    <a href="@Url.Action("Index", "Applications")" class="btn">Back to all applications</a>
</p>*@
@if (Model.HasRegions)
{
    //@{ Html.RenderAction("Regions", new { applicationId = Model.ApplicationId }); }
}
else
{
    <div>
        <h3>Get Started</h3>
        <p>You've added a new application, so what's next?</p>
        <h4>Step 1</h4>
        First, note your applications unique code, which is <strong>@Model.Code</strong>. You'll need this code to configure your logging. You can view this code at any time
            by clicking the "App Details" button along the top right.
            <h4>Step 2</h4>
        Next, add the LoggingCentral NuGet package into each Visual Studio project you want to capture logging for. The NuGet package includes support for 
        NLog and System.Diagnostics Tracing. 
        <h4>Step 3</h4>
        Monitor each Azure region that your application is deployed into and configure the LoggingCentral to use the local API. This will reduce your data charges, by limiting
        the amount of data that leaves your region's data centre. Click the "Monitor Azure Region" button along the top.
        <h4>Done</h4>
        Once you've deployed your application, you should start seeing your logs flow into LoggingCentral!

    </div>
}

<div id="addNewApplicationRegion" class="modal hide" tabindex="-1" role="dialog"
    aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Add new region</h3>
    </div>
    <div class="modal-body">
        <p>
            @using (Html.BeginForm("MonitorRegion", "Application", FormMethod.Post, new { id = "newRegionForm" }))
            {
                @Html.HiddenFor(m => m.ApplicationId)
                <label>Azure Regions</label>
                <select id="selectedRegion" name="selectedRegion">
                    @*<option value="10">West US</option>
                    <option value="20">East US</option>
                    <option value="30">East Asia</option>
                    <option value="40">North Europe</option>*@
                    <option value="50">West Europe</option>
                </select>
            }
        </p>
    </div>
    <div class="modal-footer">
        <a href="#" class="btn" data-dismiss="modal" aria-hidden="true">Close</a>
        <button type="button" class="btn btn-primary" onclick="$('#newRegionForm').submit();">
            Monitor Region</button>
    </div>
</div>

<div id="appDetails" class="modal hide" tabindex="-1" role="dialog"
    aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>@Model.Name Details</h3>
    </div>
    <div class="modal-body">
        <p>
            <label>Application Code</label>
            <input type="text" readonly value="@Model.Code" /><br />
            <span style="font-size: 12px;">Use this application code when setting up your logging
        client. It enables the client to log against the correct application.
            </span>
        </p>
    </div>
    <div class="modal-footer">
        <a href="#" class="btn" data-dismiss="modal" aria-hidden="true">Close</a>
    </div>
</div>
